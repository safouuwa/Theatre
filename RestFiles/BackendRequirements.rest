// 1.1
// Login as Admin
POST http://localhost:5097/api/v1/Login/Login HTTP/1.1 
Content-Type: application/json

{
    "UserName" : "admin1",
    "Password" : "password"
}
#####
// Wrong password
POST http://localhost:5097/api/v1/Login/Login HTTP/1.1 
Content-Type: application/json

{
    "UserName" : "admin1",
    "Password" : "password1"
}
#####
// Wrong username
POST http://localhost:5097/api/v1/Login/Login HTTP/1.1 
Content-Type: application/json

{
    "UserName" : "admin12",
    "Password" : "password"
}
#####
// Check if logged in
GET http://localhost:5097/api/v1/Login/IsAdminLoggedIn
#####
// Logout
GET http://localhost:5097/api/v1/Login/Logout
#####


// 1.2
// Retrieve all theatreshows
GET http://localhost:5097/api/v1/TheatreShow
#####
// Post a theatreshow; admin login required; returns OK or BadRequest if id is already in database or incorrect data is entered
POST http://localhost:5097/api/v1/TheatreShow
Content-Type: application/json

{
    "theatreShowId": 11,
    "title": "abc",
    "description": "test",
    "price": 10,
    "theatreShowDates": [
      {
        "theatreShowDateId": 4,
        "dateAndTime": "2024-12-12T00:00:00",
        "theatreShowId": 10
      }
    ],
    "venue": {
      "venueId": 1,
      "name": "test",
      "capacity": 10
    }
}
#####
// Update a theatreshow; admin login required; returns OK or BadRequest if id is already in database or incorrect data is entered
PUT http://localhost:5097/api/v1/TheatreShow/update
Content-Type: application/json

{
    "theatreShowId": 11,
    "title": "abcUpdated",
    "description": "testUpdated",
    "price": 10,
    "theatreShowDates": [
      {
        "theatreShowDateId": 4,
        "dateAndTime": "2024-12-12T00:00:00",
        "theatreShowId": 10
      },
      {
        "theatreShowDateId": 5,
        "dateAndTime": "2026-12-12T00:00:00",
        "theatreShowId": 10
      }
    ],
    "venue": {
      "venueId": 1,
      "name": "test",
      "capacity": 10
    }
}
#####
// Delete a theatreshow; admin login required; returns OK or BadRequest if id is not found in database
DELETE http://localhost:5097/api/v1/TheatreShow/11
#####

//1.3
// Get a specific theatreshow by id; returns OK
GET http://localhost:5097/api/v1/TheatreShow/id/11

#####
// Filter theatreshows by title ascending
GET http://localhost:5097/api/v1/TheatreShow/filter/title/asc
#####
// Filter theatreshows by title descending
GET http://localhost:5097/api/v1/TheatreShow/filter/title/desc

#####
// Filter theatreshows by desctiption ascending
GET http://localhost:5097/api/v1/TheatreShow/filter/description/asc
#####
// Filter theatreshows by description descending
GET http://localhost:5097/api/v1/TheatreShow/filter/description/desc

#####
// Filter theatreshows by location ascending
GET http://localhost:5097/api/v1/TheatreShow/filter/location/asc
#####
// Filter theatreshows by location descending
GET http://localhost:5097/api/v1/TheatreShow/filter/location/desc

#####
// Filter theatreshows by price ascending
GET http://localhost:5097/api/v1/TheatreShow/filter/price/asc
#####
// Filter theatreshows by price descending
GET http://localhost:5097/api/v1/TheatreShow/filter/price/desc
#####
// Filter theatreshows by date range
GET http://localhost:5097/api/v1/TheatreShow/filter/date/12-12-2020/01-01-2025
#####

// 1.4
// make a reservation as a non logged user; returns total price, points (special feature) + a way to login if interested.
POST http://localhost:5097/api/v1/Reservation
Content-Type: application/json

{
    "FirstName" : "Test",
    "LastName" : "Name",
    "Email" : "test@gmail.com",
    "Requests" : [
        {
            "TheatreShowDateId" : 1,
            "NumberOfTickets" : 1
        },
        {
            "TheatreShowDateId" : 1,
            "NumberOfTickets" : 1
        }
    ]
}
#####
// make a reservation as a non logged user; exceed available ticket limit
POST http://localhost:5097/api/v1/Reservation
Content-Type: application/json

{
    "FirstName" : "Test",
    "LastName" : "Name",
    "Email" : "test@gmail.com",
    "Requests" : [
        {
            "TheatreShowDateId" : 1,
            "NumberOfTickets" : 20000000
        }
    ]
}
#####
// make a reservation as a non logged user; old showdate (only works when mockdata is available) 
POST http://localhost:5097/api/v1/Reservation
Content-Type: application/json

{
    "FirstName" : "Test",
    "LastName" : "Name",
    "Email" : "test@gmail.com",
    "Requests" : [
        {
            "TheatreShowDateId" : 2,
            "NumberOfTickets" : 2
        }
    ]
}
#####
// 1.5
// Get all reservations as admin
GET http://localhost:5097/api/v1/admin/reservations
#####
// filter reservations by showtitle and/or date
GET http://localhost:5097/api/v1/admin/reservations?show=abc&date=12-12-2024
#####
// search reservation by email and/or reservationnumber
GET http://localhost:5097/api/v1/admin/reservations/search?email=test@gmail.com&reservationNumber=46
####
// mark as reservation as used
PATCH http://localhost:5097/api/v1/admin/reservations/46/mark-used
#####
// delete as reservation as used
DELETE http://localhost:5097/api/v1/admin/reservations/46
#####
